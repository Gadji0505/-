Отлично! На основании требований к лабораторной работе №3 и предыдущих отчетов, я подготовлю техническое задание на создание программного продукта для автоматизации автосалона на Java.

```docx
МИНИСТЕРСТВО НАУКИ И ВЫСШЕГО ОБРАЗОВАНИЯ РОССИЙСКОЙ ФЕДЕРАЦИИ
Федеральное государственное бюджетное образовательное учреждение
высшего образования
«КУБАНСКИЙ ГОСУДАРСТВЕННЫЙ УНИВЕРСИТЕТ»
(ФГБОУ ВО «КубГУ»)

Факультет компьютерных технологий и прикладной математики
Кафедра информационных технологий

**ОТЧЕТ**
о выполнении лабораторной работы №3
по дисциплине «Программная инженерия»

Выполнил студент группы МО32/1
________________ Г-А.Ш.Шурпаев

Направление подготовки 02.03.03 Математическое обеспечение и администрирование информационных систем
Курс 3

Отчет принял кандидат педагогических наук, доцент
________________ Н. Ю. Добровольская

Краснодар
2025 г.

# СОДЕРЖАНИЕ

Введение 3
1. Назначение, цели и структура программы 4
2. Функциональные требования и модель требований UML 5
   2.1. Диаграмма вариантов использования 5
   2.2. Функциональные требования к задачам 7
3. Специальные требования к обеспечению 11
   3.1. Требования к информационному обеспечению 11
   3.2. Требования к математическому обеспечению 12
4. Требования к инструментальному ПО 13
5. Нефункциональные требования 14
Заключение 16

# ВВЕДЕНИЕ

**Тема:** техническое задание на создание программного продукта.

**Цель:** освоение методик предварительного анализа разрабатываемой программы, формулирования функциональных и нефункциональных требований к программной реализации отдельных задач и к программе в целом, выработка навыков разработки технического задания.

**Индивидуальная тема:** разработка системы автоматизации продаж автомобилей в автосалоне "AutoSales Manager".

**Задачи:**
1. Установить назначение и общую цель создания программы. Определить структуру программы и состав функциональных задач.
2. Разработать функциональные требования к программе и построить модель требований в нотации UML.
3. Разработать специальные требования к информационному и математическому обеспечению программной реализации задач.
4. Разработать требования к инструментальному ПО, необходимому для разработки и эксплуатации ПП.
5. Установить необходимые нефункциональные требования к ПП.

# 1. НАЗНАЧЕНИЕ, ЦЕЛИ И СТРУКТУРА ПРОГРАММЫ

**Назначение программы:** Программный продукт "AutoSales Manager" предназначен для автоматизации деятельности автомобильного салона, в частности - учета и управления процессом продажи автомобилей. Система охватывает следующие виды деятельности: учет автомобилей, управление клиентской базой, оформление сделок купли-продажи, формирование отчетности.

**Объекты информатизации:** автомобильные салоны малого и среднего размера, дилерские центры.

**Цель создания ПП:**
1. **Для чего нужен ПП?** - Для замены ручного бумажного документооборота и Excel-учета, что позволит сократить время обработки заявки с 2-3 часов до 30-40 минут.
2. **Что улучшается на объекте информатизации?** - Увеличивается скорость обслуживания клиентов на 60%, снижается количество ошибок в документах с 15% до 1%, обеспечивается точный учет автомобилей в наличии и проданных единиц.

**Критерии оценки достижения целей:**
- Время обработки одной заявки ≤ 40 минут
- Количество ошибок в документах ≤ 1%
- Доступность актуальной информации об остатках ≥ 99%

**Структура программы и состав функциональных задач:**
1. Управление автомобилями
2. Управление клиентами
3. Оформление сделок купли-продажи
4. Формирование отчетности
5. Аутентификация и авторизация пользователей

# 2. ФУНКЦИОНАЛЬНЫЕ ТРЕБОВАНИЯ И МОДЕЛЬ ТРЕБОВАНИЙ UML

## 2.1. Диаграмма вариантов использования

```
[Диаграмма вариантов использования системы "AutoSales Manager"]

Основные акторы:
- Менеджер по продажам
- Руководитель отдела продаж
- Кассир
- Системный администратор

Варианты использования:

Менеджер по продажам
|
|-- Управление автомобилями
|   |-- <<include>> Добавление автомобиля
|   |-- <<include>> Редактирование информации об автомобиле
|   |-- <<include>> Изменение статуса автомобиля
|   |-- <<include>> Просмотр каталога автомобилей
|
|-- Управление клиентами
|   |-- <<include>> Регистрация нового клиента
|   |-- <<include>> Поиск клиента
|   |-- <<include>> Редактирование данных клиента
|   |-- <<include>> Просмотр истории взаимодействий
|
|-- Оформление сделок
|   |-- <<include>> Создание заявки на покупку
|   |-- <<include>> Заполнение данных договора
|   |-- <<extend>> Проверка наличия автомобиля
|   |-- <<extend>> Проверка кредитной истории клиента
|
|-- Формирование отчетов
    |-- <<include>> Просмотр ежедневных отчетов
    |-- <<include>> Формирование отчета по продажам

Руководитель отдела продаж
|
|-- Управление автомобилями
|   |-- <<include>> Утверждение поступления автомобилей
|   |-- <<include>> Установка цен
|
|-- Управление сделками
|   |-- <<include>> Согласование заявок
|   |-- <<include>> Подписание договоров
|
|-- Аналитика и отчетность
|   |-- <<include>> Просмотр аналитических отчетов
|   |-- <<include>> Формирование финансовых отчетов
|   |-- <<include>> Анализ эффективности менеджеров

Кассир
|
|-- Обработка платежей
|   |-- <<include>> Прием оплаты
|   |-- <<include>> Формирование кассового чека
|   |-- <<include>> Подтверждение оплаты в системе
|
|-- Отчетность
    |-- <<include>> Формирование кассовой отчетности

Системный администратор
|
|-- Управление пользователями
|   |-- <<include>> Создание учетных записей
|   |-- <<include>> Назначение ролей и прав
|   |-- <<include>> Блокировка пользователей
|
|-- Управление системой
    |-- <<include>> Резервное копирование данных
    |-- <<include>> Мониторинг работы системы
```

## 2.2. Функциональные требования к задачам

### 2.2.1. Требования к задаче "Управление автомобилями"

**Действия программы:**
1. Принять данные о новом автомобиле (VIN, марка, модель, комплектация, цвет, год выпуска, цена)
2. Валидировать введенные данные
3. Сохранить информацию в базу данных
4. Присвоить автомобилю статус "На складе"
5. Обновить каталог доступных автомобилей

**Требования к входным данным:**
- VIN-код: строка 17 символов, обязательное поле
- Марка: строка 2-20 символов, обязательное поле
- Модель: строка 2-20 символов, обязательное поле
- Комплектация: строковое значение из предопределенного списка
- Цвет: строковое значение из предопределенного списка
- Год выпуска: целое число 2010-2025
- Цена: десятичное число > 0

**Требования к выходным данным:**
- Уникальный идентификатор автомобиля в системе
- Подтверждение успешного сохранения
- Обновленный список автомобилей в каталоге

**Требования к качеству:** Ошибка валидации должна быть обработана с выводом понятного сообщения пользователю.

### 2.2.2. Требования к задаче "Управление клиентами"

**Действия программы:**
1. Принять персональные данные клиента (ФИО, паспортные данные, контакты)
2. Проверить уникальность клиента в системе
3. Сохранить информацию в базу данных
4. Создать карточку клиента с историей взаимодействий

**Требования к входным данным:**
- ФИО: строка, формат "Фамилия Имя Отчество"
- Серия и номер паспорта: строка 10 цифр
- Телефон: строка в формате +7(XXX)XXX-XX-XX
- Email: строка в формате email (необязательно)
- Адрес: строка (необязательно)

**Требования к выходным данным:**
- Уникальный идентификатор клиента
- Карточка клиента с полной информацией
- Подтверждение регистрации

**Временной регламент:** Время обработки запроса не более 3 секунд.

### 2.2.3. Требования к задаче "Оформление сделок купли-продажи"

**Действия программы:**
1. Принять данные о сделке (клиент, автомобиль, условия оплаты)
2. Проверить доступность автомобиля
3. Сформировать проект договора купли-продажи
4. Отправить на согласование руководителю
5. После согласования - зафиксировать сделку в системе
6. Обновить статус автомобиля на "Продан"

**Требования к входным данным:**
- ID клиента
- ID автомобиля
- Тип оплаты (наличные, кредит, рассрочка)
- Дата сделки
- Дополнительные условия (необязательно)

**Требования к выходным данным:**
- Номер договора
- Проект договора в формате PDF
- Уведомление о необходимости согласования
- Подтверждение завершения сделки

**Требования к достоверности:** Система должна предотвращать двойную продажу одного автомобиля.

### 2.2.4. Требования к задаче "Формирование отчетности"

**Действия программы:**
1. Собрать данные за указанный период
2. Сгруппировать данные по категориям (менеджеры, автомобили, периоды)
3. Сформировать отчет в заданном формате
4. Предоставить возможность фильтрации и сортировки данных

**Требования к входным данным:**
- Период отчетности (начальная и конечная дата)
- Тип отчета (ежедневный, еженедельный, месячный)
- Параметры фильтрации (необязательно)

**Требования к выходным данным:**
- Табличные данные с итогами продаж
- Графическая визуализация данных (диаграммы)
- Экспорт в форматы PDF, Excel

**Временной регламент:** Формирование отчета за месяц - не более 10 секунд.

### 2.2.5. Требования к задаче "Аутентификация и авторизация"

**Действия программы:**
1. Проверить учетные данные пользователя
2. Определить роль и права доступа
3. Предоставить доступ к соответствующим функциям системы
4. Вести журнал авторизаций

**Требования к входным данным:**
- Логин (email)
- Пароль (мин. 8 символов, буквы и цифры)

**Требования к безопасности:**
- Пароли должны храниться в хэшированном виде
- Блокировка учетной записи после 5 неудачных попыток входа
- Сессия должна завершаться после 30 минут неактивности

# 3. СПЕЦИАЛЬНЫЕ ТРЕБОВАНИЯ К ОБЕСПЕЧЕНИЮ

## 3.1. Требования к информационному обеспечению

**Состав и структура информации:**
Система должна обрабатывать следующие основные сущности:
- Автомобили (VIN, марка, модель, комплектация, цвет, год, цена, статус)
- Клиенты (ФИО, паспорт, контакты, история взаимодействий)
- Сделки (номер, дата, клиент, автомобиль, сумма, статус)
- Пользователи (логин, пароль, роль, права доступа)
- Отчеты (тип, период, данные, дата формирования)

**Требования к структурированию данных:**
- Использование реляционной СУБД (MySQL/PostgreSQL)
- Обязательное наличие следующих атрибутов у всех сущностей: ID, дата создания, дата изменения
- Формат хранения конфиденциальных данных - шифрование
- Формат обмена данными с внешними системами - JSON

**Требования к режиму доступа:**
- Многопользовательский доступ с разграничением прав
- Распределение в локальной сети предприятия
- Резервное копирование данных ежедневно

**Требования к информационной безопасности:**
- Шифрование соединения (HTTPS/TLS)
- Валидация всех входящих данных
- Защита от SQL-инъекций
- Регулярное обновление сертификатов безопасности

## 3.2. Требования к математическому обеспечению

**Математические методы и алгоритмы:**
1. **Алгоритм расчета статистики продаж:**
   - Расчет среднего времени продажи автомобиля
   - Определение наиболее популярных моделей
   - Вычисление коэффициента конверсии заявок в продажи

2. **Методы анализа данных:**
   - Простая линейная регрессия для прогнозирования продаж
   - Метод скользящего среднего для сглаживания временных рядов

3. **Алгоритмы формирования отчетов:**
   - Группировка данных по multiple criteria
   - Расчет агрегированных показателей (суммы, средние, проценты)

**Ограничения на применение:**
- Для прогнозирования использовать только данные за последние 3 года
- При расчете статистики исключать тестовые и отмененные сделки

**Требования к подготовке данных:**
- Автоматическая валидация входных данных на корректность
- Очистка данных от дубликатов при импорте
- Нормализация числовых значений перед анализом

# 4. ТРЕБОВАНИЯ К ИНСТРУМЕНТАЛЬНОМУ ПО

**Требования к операционной среде:**
- Сервер: Linux Ubuntu 20.04 LTS или выше / Windows Server 2019
- Клиент: Windows 10/11, macOS 10.15+, современные версии браузеров (Chrome 90+, Firefox 85+, Safari 14+)

**Требования к инструментальным средствам программной инженерии:**
- Средства объектно-ориентированного моделирования: StarUML или PlantUML
- Система контроля версий: Git
- Репозиторий кода: GitHub/GitLab

**Требования к инструментальным средствам разработки ПО:**
- Язык программирования: Java 17 или выше
- Фреймворк: Spring Boot 3.x
- База данных: PostgreSQL 14 или MySQL 8.0
- Сборка: Maven 3.8+ или Gradle 7+
- IDE: IntelliJ IDEA или Eclipse

**Требования к использованию готовых программных пакетов:**
- Spring Framework (MVC, Data, Security)
- Hibernate ORM
- Thymeleaf (шаблонизатор)
- Bootstrap 5 (UI framework)
- Chart.js или аналоги для визуализации данных

**Требования к вспомогательным программным средствам:**
- Сервер приложений: Tomcat 10+
- Система мониторинга: Prometheus + Grafana (опционально)
- Средства тестирования: JUnit 5, Mockito, Selenium

# 5. НЕФУНКЦИОНАЛЬНЫЕ ТРЕБОВАНИЯ

**Производительность:**
- Время отклика системы на стандартные операции ≤ 2 секунд
- Время загрузки страницы ≤ 3 секунд
- Поддержка одновременной работы ≥ 20 пользователей
- Время формирования отчета за месяц ≤ 10 секунд

**Надежность:**
- Доступность системы ≥ 99% в рабочее время
- Время восстановления после сбоя ≤ 30 минут
- Автоматическое сохранение данных при работе с формами
- Проверка целостности данных при запуске системы

**Безопасность:**
- Аутентификация по логину/паролю
- Авторизация на основе ролей (RBAC)
- Шифрование паролей алгоритмом bcrypt
- Защита от XSS и CSRF атак
- Регулярное обновление зависимостей безопасности

**Удобство использования:**
- Интуитивно понятный интерфейс на русском языке
- Единый стиль оформления всех элементов UI
- Контекстная помощь и подсказки
- Поддержка клавиатурных сокращений для частых операций
- Адаптивный дизайн для различных разрешений экрана

**Сопровождаемость:**
- Модульная архитектура с четким разделением ответственности
- Документирование API и ключевых компонентов системы
- Наличие unit-тестов с покрытием ≥ 70% критического кода
- Логирование ключевых событий и ошибок
- Возможность легкого развертывания и обновления

**Портативность:**
- Кросс-платформенность (работа на Windows, Linux, macOS серверах)
- Независимость от конкретного производителя оборудования
- Поддержка различных СУБД через механизм миграций

**Требования к аппаратному обеспечению:**
- Сервер: 4+ ядер CPU, 8+ GB RAM, 100+ GB SSD
- Клиент: 2+ ядер CPU, 4+ GB RAM, 1+ GB свободного места
- Сетевое соединение: 10+ Mbps для комфортной работы

# ЗАКЛЮЧЕНИЕ

В результате выполнения лабораторной работы №3 было разработано техническое задание на создание программного продукта "AutoSales Manager" для автоматизации продаж в автосалоне.

Были выполнены следующие задачи:
1. Установлены назначение и цели создания программы, определена структура и состав функциональных задач.
2. Разработаны функциональные требования и построена модель требований в виде диаграммы вариантов использования UML.
3. Сформулированы специальные требования к информационному и математическому обеспечению.
4. Определены требования к инструментальному ПО для разработки и эксплуатации системы.
5. Установлен комплекс нефункциональных требований, обеспечивающих качественные характеристики программного продукта.

Разработанное техническое задание является полноценным основанием для перехода к этапам проектирования и реализации системы. Все требования сформулированы конкретно и измеримо, что позволит в дальнейшем objectively оценить соответствие готового продукта поставленным целям.
```

Этот отчет полностью соответствует требованиям лабораторной работы №3 и служит полноценным техническим заданием для разработки системы автоматизации автосалона на Java.